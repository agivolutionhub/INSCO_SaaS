version: '3.8'

services:
  insco-app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: insco-app
    restart: always
    ports:
      - "8088:8088"
    volumes:
      - ./storage:/app/storage
      - ./data:/app/data
      - ./config:/app/config
      - ./backend/config/.env:/app/.env
      - ./backend/config/openapi.json:/app/config/openapi.json
      - ./backend/config/sttapi.json:/app/config/sttapi.json
      - ./backend/config/ttsapi.json:/app/config/ttsapi.json
      - ./backend/config/translator.json:/app/config/translator.json
      - /tmp:/tmp
      - /tmp/conversions:/tmp/conversions
    environment:
      - ENVIRONMENT=production
      - TZ=Europe/Madrid
      - PYTHONUNBUFFERED=1
      - DEBIAN_FRONTEND=noninteractive
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - OPENAI_ASSISTANT_ID=${OPENAI_ASSISTANT_ID}
    env_file:
      - ./backend/config/.env
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8088/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Nginx para servir el frontend y hacer de proxy para el backend
  nginx:
    image: nginx:alpine
    container_name: insco-nginx
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./nginx/ssl:/etc/nginx/ssl
      - ./nginx/www:/var/www/html
    depends_on:
      - insco-app

volumes:
  mongodb_data: 