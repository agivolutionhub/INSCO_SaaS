services:
  insco-app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: insco-app
    restart: always
    ports:
      - "8088:8088"  # Backend API
      - "3001:3001"  # Frontend
    volumes:
      - ./storage:/app/storage
      - ./tmp:/app/tmp
      - ./config:/app/config
      - ./backend/config/auth_credentials.json:/app/config/auth_credentials.json
    environment:
      - ENVIRONMENT=production
      - TZ=Europe/Madrid
      - PYTHONUNBUFFERED=1
      - BACKEND_PORT=8088
      - FRONTEND_PORT=3001
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8088/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    deploy:
      resources:
        limits:
          memory: 4G
    labels:
      # Configuración para el frontend
      - "traefik.enable=true"
      - "traefik.http.routers.insco-front.rule=Host(`tools.inscoia.es`)"
      - "traefik.http.routers.insco-front.entrypoints=websecure"
      - "traefik.http.routers.insco-front.tls=true"
      - "traefik.http.services.insco-front.loadbalancer.server.port=3001"
      
      # Configuración para el backend API
      - "traefik.http.routers.insco-api.rule=Host(`tools.inscoia.es`) && PathPrefix(`/api`)"
      - "traefik.http.routers.insco-api.entrypoints=websecure" 
      - "traefik.http.routers.insco-api.tls=true"
      - "traefik.http.services.insco-api.loadbalancer.server.port=8088" 